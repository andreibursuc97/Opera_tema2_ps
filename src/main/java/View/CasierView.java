package View;

import Model.BiletOperations;
import Model.SpectacolOperations;
import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;

import javax.swing.*;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import java.awt.*;
import java.awt.event.ActionListener;
import java.util.ArrayList;

public class CasierView extends JFrame {
    private JPanel panel1;
    private JScrollPane scrollPane2;
    private JTable tabelBilete;
    private JTextField numeSpectacolField;
    private JTextField idSpectacolField;
    private JTextField randField;
    private JTextField numarField;
    private JButton adaugaBiletButton;
    private JTable tabelSpectacole;
    private JButton delogareButton;
    private JScrollPane scrollPane1;
    private MyModel modelSpectacol;
    private ListSelectionModel listSelectionModelSpectacol;
    private MyModel modelBilete;
    private ListSelectionModel listSelectionModelBilete;

    public CasierView() {
        this.setDefaultCloseOperation(WindowConstants.DO_NOTHING_ON_CLOSE);

        $$$setupUI$$$();
        this.setSize(700, 700);
        this.setLocationRelativeTo(null);
        this.setContentPane(panel1);
    }

    public void setDelogareButton(ActionListener e) {
        delogareButton.addActionListener(e);
    }

    public void setAdaugaBiletButton(ActionListener e)
    {
        adaugaBiletButton.addActionListener(e);
    }

    public JTextField getIdSpectacolField() {
        return idSpectacolField;
    }

    public JTextField getRandField() {
        return randField;
    }

    public JTextField getNumarField() {
        return numarField;
    }

    public JTable getTabelBilete() {
        return tabelBilete;
    }

    public MyModel getModelBilete() {
        return modelBilete;
    }

    public void modelUpdate() {
        String[] columnNames = {"Id", "Gen", "Titlu", "Regia", "Distributia", "Data", "Total bilete", "Bilete vandute"};


        SpectacolOperations spectacolOperations = new SpectacolOperations();
        ArrayList<String[]> date = new ArrayList<String[]>();
        date = spectacolOperations.afiseazaSpectacole();

        modelSpectacol.setColumnNames(columnNames);
        modelSpectacol.setList(date);

    }

    public void modelUpdateBilete(int id) {
        String[] columnNames = {"Id", "Rand", "Numar"};


        BiletOperations biletOperations = new BiletOperations();
        ArrayList<String[]> date = new ArrayList<String[]>();
        date = biletOperations.afiseazaBilete(id);

        modelBilete.setColumnNames(columnNames);
        modelBilete.setList(date);

    }

    private void createUIComponents() {
        // TODO: place custom component creation code here
        modelSpectacol = new MyModel();
        tabelSpectacole = new JTable();
        listSelectionModelSpectacol = tabelSpectacole.getSelectionModel();
        tabelSpectacole.setSelectionModel(listSelectionModelSpectacol);
        listSelectionModelSpectacol.addListSelectionListener(new SharedListSelectionHandlerSpectacol());
        tabelSpectacole.setSelectionModel(listSelectionModelSpectacol);
        modelUpdate();
        tabelSpectacole.setModel(modelSpectacol);
        tabelSpectacole.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        tabelSpectacole.add(tabelSpectacole.getTableHeader(), BorderLayout.PAGE_START);

        scrollPane1 = new JScrollPane(tabelSpectacole);

        modelBilete = new MyModel();
        tabelBilete = new JTable();
        listSelectionModelBilete = tabelBilete.getSelectionModel();
        tabelBilete.setSelectionModel(listSelectionModelBilete);
        listSelectionModelBilete.addListSelectionListener(new SharedListSelectionHandlerSpectacol());
        tabelBilete.setSelectionModel(listSelectionModelBilete);
        modelUpdateBilete(1);
        tabelBilete.setModel(modelBilete);
        tabelBilete.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        tabelBilete.add(tabelBilete.getTableHeader(), BorderLayout.PAGE_START);

        scrollPane2 = new JScrollPane(tabelBilete);
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        createUIComponents();
        panel1 = new JPanel();
        panel1.setLayout(new GridLayoutManager(3, 1, new Insets(0, 0, 0, 0), -1, -1));
        final JPanel panel2 = new JPanel();
        panel2.setLayout(new GridLayoutManager(1, 2, new Insets(20, 10, 20, 10), -1, -1));
        panel1.add(panel2, new GridConstraints(2, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, new Dimension(550, 1400), new Dimension(2000, 2000), 0, false));
        panel2.add(scrollPane2, new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        scrollPane2.setViewportView(tabelBilete);
        final JPanel panel3 = new JPanel();
        panel3.setLayout(new GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        panel2.add(panel3, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, new Dimension(100, 400), new Dimension(1000, 2000), 0, false));
        final JPanel panel4 = new JPanel();
        panel4.setLayout(new GridLayoutManager(9, 1, new Insets(10, 10, 0, 0), -1, -1));
        panel3.add(panel4, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        numeSpectacolField = new JTextField();
        numeSpectacolField.setEditable(false);
        panel4.add(numeSpectacolField, new GridConstraints(3, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        final JLabel label1 = new JLabel();
        label1.setText("Nume spectacol");
        panel4.add(label1, new GridConstraints(2, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JLabel label2 = new JLabel();
        label2.setText("ID Spectacol");
        panel4.add(label2, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        idSpectacolField = new JTextField();
        idSpectacolField.setEditable(false);
        idSpectacolField.setText("");
        panel4.add(idSpectacolField, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        final JLabel label3 = new JLabel();
        label3.setText("Rand");
        panel4.add(label3, new GridConstraints(4, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        randField = new JTextField();
        randField.setEditable(true);
        panel4.add(randField, new GridConstraints(5, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        numarField = new JTextField();
        numarField.setEditable(true);
        panel4.add(numarField, new GridConstraints(7, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        adaugaBiletButton = new JButton();
        adaugaBiletButton.setText("Adauga bilet");
        panel4.add(adaugaBiletButton, new GridConstraints(8, 0, 1, 1, GridConstraints.ANCHOR_SOUTH, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JLabel label4 = new JLabel();
        label4.setText("Numar");
        panel4.add(label4, new GridConstraints(6, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        panel1.add(scrollPane1, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        scrollPane1.setViewportView(tabelSpectacole);
        final JPanel panel5 = new JPanel();
        panel5.setLayout(new GridLayoutManager(1, 1, new Insets(10, 0, 20, 0), -1, -1));
        panel1.add(panel5, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        delogareButton = new JButton();
        delogareButton.setText("Delogare");
        panel5.add(delogareButton, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return panel1;
    }

    class SharedListSelectionHandlerSpectacol implements ListSelectionListener {

        @Override
        public void valueChanged(ListSelectionEvent e) {
            ListSelectionModel lsm = (ListSelectionModel) e.getSource();
            if (tabelSpectacole.getSelectedRow() != -1) {
                idSpectacolField.setText(tabelSpectacole.getValueAt(tabelSpectacole.getSelectedRow(), 0).toString());
                numeSpectacolField.setText(tabelSpectacole.getValueAt(tabelSpectacole.getSelectedRow(), 2).toString());
                modelUpdateBilete(Integer.parseInt(tabelSpectacole.getValueAt(tabelSpectacole.getSelectedRow(), 0).toString()));
                tabelBilete.setModel(modelBilete);

            }
        }
    }


}
